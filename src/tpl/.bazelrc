build --crosstool_top=@local_llvm//:toolchain

build:opt --compilation_mode=opt
build:dbg --compilation_mode=dbg

build:cpp --cxxopt=-std=c++20
build:cpp --host_cxxopt=-std=c++20
build:cpp --copt=-O3
build:cpp --strip=always
build:cpp --features=thin_lto


# .bazelrc
# Address Sanitizer
build:asan --copt=-fsanitize=address
build:asan --copt=-fno-omit-frame-pointer
build:asan --copt=-fno-optimize-sibling-calls
build:asan --copt=-g
build:asan --copt=-O1
build:asan --linkopt=-fsanitize=address

# Undefined Behavior Sanitizer
build:ubsan --copt=-fsanitize=undefined
build:ubsan --copt=-fno-omit-frame-pointer
build:ubsan --copt=-fno-optimize-sibling-calls
build:ubsan --copt=-g
build:ubsan --linkopt=-fsanitize=undefined

# Thread Sanitizer
build:tsan --copt=-fsanitize=thread
build:tsan --copt=-fno-omit-frame-pointer
build:tsan --copt=-fno-optimize-sibling-calls
build:tsan --copt=-g
build:tsan --copt=-O1
build:tsan --linkopt=-fsanitize=thread

# Leak Sanitizer
build:lsan --copt=-fsanitize=leak
build:lsan --copt=-fno-omit-frame-pointer
build:lsan --copt=-fno-optimize-sibling-calls
build:lsan --copt=-g
build:lsan --linkopt=-fsanitize=leak

# Memory Sanitizer (仅 clang)
build:msan --copt=-fsanitize=memory
build:msan --copt=-fno-omit-frame-pointer
build:msan --copt=-fno-optimize-sibling-calls
build:msan --copt=-g
build:msan --copt=-O1
build:msan --linkopt=-fsanitize=memory

# 对于 ASan
# export ASAN_OPTIONS="detect_leaks=1:halt_on_error=0:abort_on_error=1:symbolize=1"
# 对于 TSan
# export TSAN_OPTIONS="halt_on_error=1:history_size=7:second_deadlock_stack=1"
# 对于 UBSan
# export UBSAN_OPTIONS="halt_on_error=1:print_stacktrace=1"